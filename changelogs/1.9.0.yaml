date: December 20, 2018

changes:
- area: access log
  change: |
    added a :ref:`JSON logging mode <config_access_log_format_dictionaries>` to output access logs in JSON format.
- area: access log
  change: |
    added dynamic metadata to access log messages streamed over gRPC.
- area: access log
  change: |
    added ``DOWNSTREAM_CONNECTION_TERMINATION``.
- area: admin
  change: |
    :http:post:`/logging` now responds with 200 while there are no params.
- area: admin
  change: |
    added support for displaying subject alternate names in :ref:`certs <operations_admin_interface_certs>` end point.
- area: admin
  change: |
    added host weight to the :http:get:`/clusters?format=json` end point response.
- area: admin
  change: |
    :http:get:`/server_info` now responds with a JSON object instead of a single string.
- area: admin
  change: |
    :http:get:`/server_info` now exposes what stage of initialization the server is currently in.
- area: admin
  change: |
    added support for displaying command line options in :http:get:`/server_info` end point.
- area: circuit-breaker
  change: |
    added cx_open, rq_pending_open, rq_open and rq_retry_open gauges to expose live state via :ref:`circuit breakers
    statistics <config_cluster_manager_cluster_stats_circuit_breakers>`.
- area: cluster
  change: |
    set a default of 1s for :ref:`option <envoy_api_field_Cluster.CommonLbConfig.update_merge_window>`.
- area: config
  change: |
    removed support for the v1 API.
- area: config
  change: |
    added support for :ref:`rate limiting <envoy_api_msg_core.RateLimitSettings>` discovery request calls.
- area: cors
  change: |
    added :ref:`invalid/valid stats <cors-statistics>` to filter.
- area: ext-authz
  change: |
    added support for providing per route config - optionally disable the filter and provide context extensions.
- area: fault
  change: |
    removed integer percentage support.
- area: grpc-json
  change: |
    added support for :ref:`ignoring query parameters
    <envoy_api_field_config.filter.http.transcoder.v2.GrpcJsonTranscoder.ignored_query_parameters>`.
- area: health check
  change: |
    added :ref:`logging health check failure events <envoy_api_field_core.HealthCheck.always_log_health_check_failures>`.
- area: health check
  change: |
    added ability to set :ref:`authority header value <envoy_api_field_core.HealthCheck.GrpcHealthCheck.authority>` for gRPC
    health check.
- area: http
  change: |
    added HTTP/2 WebSocket proxying via :ref:`extended CONNECT <envoy_api_field_core.Http2ProtocolOptions.allow_connect>`.
- area: http
  change: |
    added limits to the number and length of header modifications in all fields request_headers_to_add and
    response_headers_to_add. These limits are very high and should only be used as a last-resort safeguard.
- area: http
  change: |
    added support for a :ref:`request timeout
    <envoy_api_field_config.filter.network.http_connection_manager.v2.HttpConnectionManager.request_timeout>`. The timeout
    is disabled by default.
- area: http
  change: |
    no longer adding whitespace when appending ``X-Forwarded-For headers``. **Warning**: this is not compatible with 1.7.0
    builds prior to `9d3a4eb4ac44be9f0651fcc7f87ad98c538b01ee <https://github.com/envoyproxy/envoy/pull/3610>`_. See `#3611
    <https://github.com/envoyproxy/envoy/issues/3611>`_ for details.
- area: http
  change: |
    augmented the ``sendLocalReply`` filter API to accept an optional ``GrpcStatus`` value to override the default HTTP to
    gRPC status mapping.
- area: http
  change: |
    no longer close the TCP connection when a HTTP/1 request is retried due to a response with empty body.
- area: http
  change: |
    added support for more gRPC content-type headers in :ref:`gRPC bridge filter <config_http_filters_grpc_bridge>`, like
    application/grpc+proto.
- area: listeners
  change: |
    all listener filters are now governed by the :ref:`listener_filters_timeout
    <envoy_api_field_Listener.listener_filters_timeout>` setting. The hard coded 15s timeout in the :ref:`TLS inspector
    listener filter <config_listener_filters_tls_inspector>` is superseded by this setting.
- area: listeners
  change: |
    added the ability to match :ref:`FilterChain <envoy_api_msg_listener.FilterChain>` using :ref:`source_type
    <envoy_api_field_listener.FilterChainMatch.source_type>`.
- area: load balancer
  change: |
    added a :ref:`configuration <envoy_api_msg_Cluster.LeastRequestLbConfig>` option to specify the number of choices made
    in P2C.
- area: logging
  change: |
    added missing ``[`` in log prefix.
- area: mongo_proxy
  change: |
    added :ref:`dynamic metadata <config_network_filters_mongo_proxy_dynamic_metadata>`.
- area: network
  change: |
    removed the reference to ``FilterState`` in ``Connection`` in favor of ``StreamInfo``.
- area: rate-limit
  change: |
    added :ref:`configuration
    <envoy_api_field_config.filter.http.rate_limit.v2.RateLimit.rate_limited_as_resource_exhausted>` to specify whether the
    ``GrpcStatus`` status returned should be ``RESOURCE_EXHAUSTED`` or ``UNAVAILABLE`` when a gRPC call is rate limited.
- area: rate-limit
  change: |
    removed support for the legacy ratelimit service and made the data-plane-api :ref:`rls.proto
    <envoy_api_file_envoy/service/ratelimit/v2/rls.proto>` based implementation default.
- area: rate-limit
  change: |
    removed the deprecated cluster_name attribute in :ref:`rate limit service configuration
    <envoy_api_file_envoy/config/ratelimit/v2/rls.proto>`.
- area: rate-limit
  change: |
    added :ref:`rate_limit_service <envoy_api_msg_config.filter.http.rate_limit.v2.RateLimit>` configuration to filters.
- area: rbac
  change: |
    added dynamic metadata to the network level filter.
- area: rbac
  change: |
    added support for permission matching by :ref:`requested server name
    <envoy_api_field_config.rbac.v2alpha.permission.requested_server_name>`.
- area: redis
  change: |
    static cluster configuration is no longer required. Redis proxy will work with clusters delivered via CDS.
- area: router
  change: |
    added ability to configure arbitrary :ref:`retriable status codes
    <envoy_api_field_route.routeaction.retrypolicy.retriable_status_codes>`.
- area: router
  change: |
    added ability to set attempt count in upstream requests, see :ref:`virtual host's include request attempt count flag
    <envoy_api_field_route.VirtualHost.include_request_attempt_count>`.
- area: router
  change: |
    added internal :ref:`grpc-retry-on <config_http_filters_router_x-envoy-retry-grpc-on>` policy.
- area: router
  change: |
    added :ref:`scheme_redirect <envoy_api_field_route.RedirectAction.scheme_redirect>` and :ref:`port_redirect
    <envoy_api_field_route.RedirectAction.port_redirect>` to define the respective scheme and port rewriting RedirectAction.
- area: router
  change: |
    when :ref:`max_grpc_timeout <envoy_api_field_route.RouteAction.max_grpc_timeout>` is set, Envoy will now add or update
    the grpc-timeout header to reflect Envoy's expected timeout.
- area: router
  change: |
    per try timeouts now starts when an upstream stream is ready instead of when the request has been fully decoded by
    Envoy.
- area: router
  change: |
    added support for not retrying :ref:`rate limited requests <config_http_filters_router_x-envoy-ratelimited>`. Rate limit
    filter now sets the :ref:`x-envoy-ratelimited <config_http_filters_router_x-envoy-ratelimited>` header so the rate
    limited requests that may have been retried earlier will not be retried with this change.
- area: router
  change: |
    added support for enabling upgrades on a :ref:`per-route <envoy_api_field_route.RouteAction.upgrade_configs>` basis.
- area: router
  change: |
    support configuring a default fraction of mirror traffic via :ref:`runtime_fraction
    <envoy_api_field_route.RouteAction.RequestMirrorPolicy.runtime_key>`.
- area: sandbox
  change: |
    added :ref:`cors sandbox <install_sandboxes_cors>`.
- area: server
  change: |
    added ``SIGINT`` (Ctrl-C) handler to gracefully shutdown Envoy like ``SIGTERM``.
- area: stats
  change: |
    added :ref:`stats_matcher <envoy_api_field_config.metrics.v2.StatsConfig.stats_matcher>` to the bootstrap config for
    granular control of stat instantiation.
- area: stream
  change: |
    renamed the ``RequestInfo`` namespace to ``StreamInfo`` to better match its behaviour within TCP and HTTP
    implementations.
- area: stream
  change: |
    renamed ``perRequestState`` to ``filterState`` in ``StreamInfo``.
- area: stream
  change: |
    added ``downstreamDirectRemoteAddress`` to ``StreamInfo``.
- area: thrift_proxy
  change: |
    introduced thrift rate limiter filter.
- area: tls
  change: |
    added ssl.curves.<curve>, ssl.sigalgs.<sigalg> and ssl.versions.<version> to :ref:`listener metrics
    <config_listener_stats>` to track TLS algorithms and versions in use.
- area: tls
  change: |
    added support for :ref:`client-side session resumption <envoy_api_field_auth.UpstreamTlsContext.max_session_keys>`.
- area: tls
  change: |
    added support for CRLs in :ref:`trusted_ca <envoy_api_field_auth.CertificateValidationContext.trusted_ca>`.
- area: tls
  change: |
    added support for :ref:`multiple server TLS certificates <arch_overview_ssl_cert_select>`.
- area: tls
  change: |
    added support for :ref:`password encrypted private keys <envoy_api_field_auth.TlsCertificate.password>`.
- area: tls
  change: |
    added the ability to build :ref:`BoringSSL FIPS <arch_overview_ssl_fips>` using ``--define boringssl=fips`` Bazel
    option.
- area: tls
  change: |
    removed support for ECDSA certificates with curves other than P-256.
- area: tls
  change: |
    removed support for RSA certificates with keys smaller than 2048-bits.
- area: tracing
  change: |
    added support to the Zipkin tracer for the :ref:`b3 <config_http_conn_man_headers_b3>` single header format.
- area: tracing
  change: |
    added support for :ref:`Datadog <arch_overview_tracing>` tracer.
- area: upstream
  change: |
    added :ref:`scale_locality_weight <envoy_api_field_Cluster.LbSubsetConfig.scale_locality_weight>` to enable scaling
    locality weights by number of hosts removed by subset lb predicates.
- area: upstream
  change: |
    changed how load calculation for :ref:`priority levels <arch_overview_load_balancing_priority_levels>` and :ref:`panic
    thresholds <arch_overview_load_balancing_panic_threshold>` interact. As long as normalized total health is 100% panic
    thresholds are disregarded.
- area: upstream
  change: |
    changed the default hash for :ref:`ring hash <envoy_api_msg_Cluster.RingHashLbConfig>` from std::hash to `xxHash
    <https://github.com/Cyan4973/xxHash>`_.
- area: upstream
  change: |
    when using active health checking and STRICT_DNS with several addresses that resolve to the same hosts, Envoy will now
    health check each host independently.

deprecated:
- area: filters
  change: |
    Order of execution of the network write filter chain has been reversed. Prior to this release cycle it was incorrect,
    see `#4599 <https://github.com/envoyproxy/envoy/issues/4599>`_. In the 1.9.0 release cycle we introduced
    ``bugfix_reverse_write_filter_order`` in `lds.proto
    <https://github.com/envoyproxy/envoy/blob/main/api/envoy/api/v2/lds.proto>`_ to temporarily support both old and new
    behaviors. Note this boolean field is deprecated.
- area: filters
  change: |
    Order of execution of the HTTP encoder filter chain has been reversed. Prior to this release cycle it was incorrect, see
    `#4599 <https://github.com/envoyproxy/envoy/issues/4599>`_. In the 1.9.0 release cycle we introduced
    ``bugfix_reverse_encode_order`` in `http_connection_manager.proto
    <https://github.com/envoyproxy/envoy/blob/main/api/envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto>`_
    to temporarily support both old and new behaviors. Note this boolean field is deprecated.
- area: api
  change: |
    Use of the v1 ``REST_LEGACY`` ``ApiConfigSource`` is deprecated.
- area: load_balancing
  change: |
    Use of std::hash in the ring hash load balancer is deprecated.
- area: rate_limiting
  change: |
    Use of ``rate_limit_service`` configuration in the `bootstrap configuration
    <https://github.com/envoyproxy/envoy/blob/main/api/envoy/config/bootstrap/v2/bootstrap.proto>`_ is deprecated.
- area: routing
  change: |
    Use of ``runtime_key`` in ``RequestMirrorPolicy``, found in `route.proto
    <https://github.com/envoyproxy/envoy/blob/main/api/envoy/api/v2/route/route.proto>`_ is deprecated. Set the
    ``runtime_fraction`` field instead.
- area: hcm
  change: |
    Use of buffer filter ``max_request_time`` is deprecated in favor of the request timeout found in `HttpConnectionManager
    <https://github.com/envoyproxy/envoy/blob/main/api/envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto>`_.
