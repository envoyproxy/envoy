date: Pending

behavior_changes:
# *Changes that are expected to cause an incompatibility if applicable; deployment changes are likely required*

minor_behavior_changes:
# *Changes that may cause incompatibilities for some users, but should not for most*
- area: access_log
  change: |
    New implementation of the JSON formatter will be enabled by default.
    The :ref:`sort_properties <envoy_v3_api_field_config.core.v3.JsonFormatOptions.sort_properties>` field will
    be ignored in the new implementation because the new implementation always sorts properties. And the new implementation
    will always keep the value type in the JSON output. For example, the duration field will always be rendered as a number
    instead of a string.
    This behavior change could be disabled temporarily by setting the runtime
    ``envoy.reloadable_features.logging_with_fast_json_formatter`` to false.
- area: formatter
  change: |
    The NaN and Infinity values of float will be serialized to ``null`` and ``"inf"`` respectively in the
    metadata (``DYNAMIC_METADATA``, ``CLUSTER_METADATA``, etc.) formatter.

bug_fixes:
# *Changes expected to improve the state of the world and are unlikely to have negative effects*

removed_config_or_runtime:
# *Normally occurs at the end of the* :ref:`deprecation period <deprecated>`
- area: upstream
  change: |
    Removed runtime flag ``envoy.restart_features.allow_client_socket_creation_failure`` and legacy code paths.

new_features:
- area: tls
  change: |
    Added :ref:`prefer_client_ciphers
    <envoy_v3_api_field_extensions.transport_sockets.tls.v3.DownstreamTlsContext.prefer_client_ciphers>`
    to support enabling client cipher preference instead of server's for TLS handshakes.
- area: ext_authz
  change: |
    Added config field
    :ref:`filter_metadata <envoy_v3_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.filter_metadata>`
    for injecting arbitrary data to the filter state for logging.
- area: access_log
  change: |
    added %UPSTREAM_CLUSTER_RAW% access log formatter to log the original upstream cluster name, regardless of whether
    ``alt_stat_name`` is set.
- area: formatter
  change: |
    Added full feature absl::FormatTime() support to the DateFormatter. This allows the timepoint formatters (like
    ``%START_TIME%``) to use ``%E#S``, ``%E*S``, ``%E#f`` and ``%E*f`` to format the subsecond part of the timepoint.
- area: http
  change: |
    Added configuration setting for the :ref:`maximum size of response headers
    <envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_response_headers_kb>` in responses. The default can
    be overridden with runtime key ``envoy.reloadable_features.max_response_headers_size_kb``.
- area: http_11_proxy
  change: |
    Added the option to configure the transport socket via locality or endpoint metadata.
- area: sockets
  change: |
    Added socket ``type`` field for specifying a socket type to apply the socket option to under :ref:`SocketOption
    <envoy_v3_api_msg_config.core.v3.SocketOption>`. If not specified, the socket option will be applied to all socket
    types.
- area: quic
  change: |
    QUIC server and client support certificate compression, which can in some cases reduce the number of round trips
    required to setup a connection. This change temporarily disabled by setting the runtime flag
    ``envoy.reloadable_features.quic_support_certificate_compression`` to ``false``.
- area: quic
  change: |
    Added QUIC protocol option :ref:`reject_new_connections
    <envoy_v3_api_field_config.listener.v3.QuicProtocolOptions.reject_new_connections>` to reject connection-establishing
    packets at the QUIC layer.
- area: tls
  change: |
    Added an extension point :ref:`custom_tls_certificate_selector
    <envoy_v3_api_field_extensions.transport_sockets.tls.v3.CommonTlsContext.custom_tls_certificate_selector>`
    to allow overriding TLS certificate selection behavior.
    An extension can select certificate base on the incoming SNI, in both sync and async mode.
- area: oauth
  change: |
    Added :ref:`retry_policy <envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.retry_policy>` to reconnect to
    the auth server when a connection fails to be established.
    Added :ref:`cookie_domain <envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Credentials.cookie_domain>`
    field to OAuth2 filter to allow setting the domain of cookies.
    Added a nonce to the state parameter in the authorization request to mitigate CSRF attacks. The nonce is generated by the
    OAuth2 filter and stored in a cookie. This feature is enabled by defaut starting from this release.
- area: access log
  change: |
    Added support for :ref:`%DOWNSTREAM_PEER_CHAIN_FINGERPRINTS_1% <config_access_log_format_response_flags>`,
    ``%DOWNSTREAM_PEER_CHAIN_FINGERPRINTS_256``, and ``%DOWNSTREAM_PEER_CHAIN_SERIALS%``, as access log formatters.
- area: matching
  change: |
    Added dynamic metadata matcher support :ref:`Dynamic metadata input <extension_envoy.matching.inputs.dynamic_metadata>`
    and :ref:`Dynamic metadata input matcher <extension_envoy.matching.matchers.metadata_matcher>`.
- area: ratelimit
  change: |
    Added the ability to modify :ref:`hits_addend <envoy_v3_api_field_service.ratelimit.v3.RateLimitRequest.hits_addend>`
    by setting by setting filter state value ``envoy.ratelimit.hits_addend`` to the desired value.
- area: access_log
  change: |
    Added new access log command operators ``%START_TIME_LOCAL%`` and ``%EMIT_TIME_LOCAL%``,
    similar to  ``%START_TIME%`` and ``%EMIT_TIME%``, but use local time zone.
- area: quic
  change: |
    Added QUIC protocol option :ref:`save_cmsg_config
    <envoy_v3_api_field_config.listener.v3.QuicProtocolOptions.save_cmsg_config>` to optionally specify a CMSG header type to be
    propagated from the first packet on the connection to QuicListenerFilter.
- area: dns
  change: |
    Prefer using IPv6 address when addresses from both families are available.
    Can be reverted by setting ``envoy.reloadable_features.prefer_ipv6_dns_on_macos`` to false.
- area: grpc_field_extraction
  change: |
    Added ``map<string, string>`` support: Target fields of type ``map<string, string>`` can be extracted and added to dynamic metadata.
- area: rbac
  change: |
    Added :ref:`delay_deny <envoy_v3_api_msg_extensions.filters.network.rbac.v3.RBAC>` to support deny connection after
    the configured duration.
- area: ext_authz
  change: |
    Added :ref:`emit_filter_state_stats <envoy_v3_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.emit_filter_state_stats>`
    which when true enables filter state stats for access logging.
- area: extension_discovery_service
  change: |
    added ECDS support for :ref:`UDP session filters
    <envoy_v3_api_field_extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.SessionFilter.config_discovery>`.
- area: http3
  change: |
    ``http3_protocol_options`` in ``HttpConnectionManager`` has been upgraded to general access.
- area: cluster
  change: |
    Customizing the happy eyeballs algorithm for an upstream cluster by configuring
    :ref:`happy_eyeballs_config <envoy_v3_api_field_config.cluster.v3.UpstreamConnectionOptions.happy_eyeballs_config>`.
    A default configuration will be used if not provided. This behavior can be reverted
    by setting the runtime guard ``envoy.reloadable_features.use_config_in_happy_eyeballs`` to false.
- area: getaddrinfo
  change: |
    Added :ref:`num_retries<envoy_v3_api_field_extensions.network.dns_resolver.getaddrinfo.v3.GetAddrInfoDnsResolverConfig.num_retries>`
    to configure the number of retries. If this field is not provided, the ``getaddrinfo`` resolver will retry indefinitely until it
    succeeds or the DNS query times out. This behavior can be reverted by setting the runtime guard
    ``envoy.reloadable_features.getaddrinfo_num_retries`` to false.
- area: getaddrinfo
  change: |
    Added ``envoy.enable_dfp_dns_trace`` runtime flag to enable DNS query trace in the DNS resolution details.
- area: geoip
  change: |
    Added ``envoy.reloadable_features.mmdb_files_reload_enabled`` runtime flag that enables reload of mmdb files by default.
- area: access_log
  change: |
    Added new JSON access log formatter implementation which provides 16-25x performance improvement over the old
    implementation. The legacy implementation will be enabled by default for now but will be deprecated and removed
    in a future release.
    The :ref:`sort_properties <envoy_v3_api_field_config.core.v3.JsonFormatOptions.sort_properties>` field will
    be ignored in the new implementation because the new implementation always sorts properties. And the new implementation
    will always keep the value type in the JSON output. For example, the duration field will always be rendered as a number
    instead of a string.
    The new JSON formatter could be enabled by setting the runtime guard
    ``envoy.reloadable_features.logging_with_fast_json_formatter`` to true.
- area: access_logs
  change: |
    Added support for %UPSTREAM_CONNECTION_ID% access log substitution string in TCP and UDP tunneling flows.
- area: redis_proxy
  change: |
    Added :ref:`external_auth_provider <envoy_v3_api_msg_extensions.filters.network.redis_proxy.v3.RedisProxy>` to support
    external authentication for redis proxy.
- area: udp_access_logs
  change: |
    Added support for %BYTES_RECEIVED%, %BYTES_SENT%, %UPSTREAM_HEADER_BYTES_SENT%, %UPSTREAM_HEADER_BYTES_RECEIVED%,
    %UPSTREAM_WIRE_BYTES_SENT%, %UPSTREAM_WIRE_BYTES_RECEIVED% access log substitution strings for UDP tunneling flows.
- area: original_ip_detection extension
  change: |
    The :ref:`xff <envoy_v3_api_msg_extensions.http.original_ip_detection.xff.v3.XffConfig>`
    original IP detection method now supports using a list of trusted CIDRs when parsing ``x-forwarded-for``.
- area: resource_monitors
  change: |
    Added possibility to monitor CPU utilization in Linux based systems via :ref:`cpu utilization monitor
    <envoy_v3_api_msg_extensions.resource_monitors.cpu_utilization.v3.CpuUtilizationConfig>` in overload manager.
- area: lua
  change: |
      Added two new methods ``oidsPeerCertificate()`` and ``oidsLocalCertificate()`` to SSL
      connection object API :ref:`SSL connection info object <config_http_filters_lua_ssl_socket_info>`.
- area: local_ratelimit
  change: |
    Add the :ref:`rate_limits
    <envoy_v3_api_field_extensions.filters.http.local_ratelimit.v3.LocalRateLimit.rate_limits>`
    field to generate rate limit descriptors. If this field is set, the
    :ref:`VirtualHost.rate_limits<envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits>` or
    :ref:`RouteAction.rate_limits<envoy_v3_api_field_config.route.v3.RouteAction.rate_limits>` fields
    will be ignored.
- area: basic_auth
  change: |
    Added support to provide an override
    :ref:`authentication_header <envoy_v3_api_field_extensions.filters.http.basic_auth.v3.BasicAuth.authentication_header>`
    to load Basic Auth credential.
- area: quic
  change: |
    Added ``max_packet_length`` to the QUIC protocol options to allow users to change the largest
    size of a QUIC packet that can be transmitted over the QUIC connection.
- area: oauth
  change: |
    Added :ref:`disable_access_token_set_cookie
    <envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.disable_access_token_set_cookie>`
    to disable setting the Access Token cookie.
- area: oauth
  change: |
    Added :ref:`disable_refresh_token_set_cookie
    <envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.disable_refresh_token_set_cookie>`
    to disable setting the Refresh Token cookie.
- area: ext_proc
  change: |
    Added allow list
    :ref:`allowed_override_modes <envoy_v3_api_field_extensions.filters.http.ext_proc.v3.ExternalProcessor.allowed_override_modes>`
    for :ref:`mode_override <envoy_v3_api_field_service.ext_proc.v3.ProcessingResponse.mode_override>`.
- area: load_balancing
  change: |
    WIP: Added implementation of :ref:`client_side_weighted_round_robin
    <envoy_v3_api_msg_extensions.load_balancing_policies.client_side_weighted_round_robin.v3.ClientSideWeightedRoundRobin>`
    load balancing policy that uses ``OrcaLoadReport`` provided by the upstream host to calculate host load balancing weight.
- area: stats ads
  change: |
    Fixed metric for ADS disconnection counters, extracting the tag from `grpc.ads_cluster.*` counter stats.

deprecated:
