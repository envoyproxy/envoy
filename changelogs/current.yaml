date: Pending

behavior_changes:
- area: http
  change: |
    The route refresh will now results in a tracing refresh. The trace sampling decision and decoration
    of new route will be applied to the active span.
    This change can be reverted by setting the runtime guard
    ``envoy.reloadable_features.trace_refresh_after_route_refresh`` to ``false``.
    Note, if :ref:`pack_trace_reason
    <envoy_v3_api_field_extensions.request_id.uuid.v3.UuidRequestIdConfig.pack_trace_reason>` is set
    to ``true`` (it is ``true`` by default), then a request have been marked as traced may cannot be
    unmarked as traced after the tracing refresh.

minor_behavior_changes:
# *Changes that may cause incompatibilities for some users, but should not for most*

bug_fixes:
# *Changes expected to improve the state of the world and are unlikely to have negative effects*

removed_config_or_runtime:
# *Normally occurs at the end of the* :ref:`deprecation period <deprecated>`

new_features:
- area: health_check
  change: |
    Added support for request payloads in HTTP health checks. The ``send`` field in ``HttpHealthCheck`` can now be
    used to specify a request body to be sent during health checking. This feature supports both hex-encoded text
    and binary payloads, similar to TCP health checks. The payload can only be used with HTTP methods that support
    request bodies (POST, PUT, PATCH, OPTIONS). Methods that must not have request bodies (GET, HEAD, DELETE, TRACE)
    are validated and will throw an error if combined with payloads. The implementation is optimized to process the
    payload once during configuration and reuse it for all health check requests. See :ref:`HttpHealthCheck
    <envoy_v3_api_msg_config.core.v3.HealthCheck.HttpHealthCheck>` for configuration details.
- area: lua
  change: |
    Added a new ``filterState()`` on ``streamInfo()`` which provides access to filter state objects stored during request processing.
    This allows Lua scripts to retrieve string, boolean, and numeric values stored by various filters for use in routing decisions,
    header modifications, and other processing logic. See :ref:`Filter State API <config_http_filters_lua_stream_info_filter_state_wrapper>`
    for more details.

deprecated:
