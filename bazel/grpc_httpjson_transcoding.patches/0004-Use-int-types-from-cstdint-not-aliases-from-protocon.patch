From 001b7303c78262a06ece8ae78ad2c5ecfcca9a1a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Alejandro=20R=20Sede=C3=B1o?= <asedeno@google.com>
Date: Sat, 14 Sep 2024 17:27:03 -0400
Subject: [PATCH 4/9] Use int types from cstdint, not aliases from
 protoconverter
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The old names were coming from aliases copied out of protobuf into
protoconverter that should also be removed, and they're were being
included indirectly.

Signed-off-by: Alejandro R Sede√±o <asedeno@google.com>
---
 src/include/grpc_transcoding/prefix_writer.h  | 13 +++-----
 .../request_stream_translator.h               |  9 ++---
 src/include/grpc_transcoding/request_weaver.h | 13 +++-----
 src/prefix_writer.cc                          |  9 ++---
 src/request_weaver.cc                         |  9 ++---
 test/prefix_writer_test.cc                    | 33 ++++++++++---------
 test/request_weaver_test.cc                   |  9 ++---
 7 files changed, 47 insertions(+), 48 deletions(-)

diff --git a/src/include/grpc_transcoding/prefix_writer.h b/src/include/grpc_transcoding/prefix_writer.h
index aa94e5e..e562fb3 100644
--- a/src/include/grpc_transcoding/prefix_writer.h
+++ b/src/include/grpc_transcoding/prefix_writer.h
@@ -15,6 +15,7 @@
 #ifndef GRPC_TRANSCODING_PREFIX_WRITER_H_
 #define GRPC_TRANSCODING_PREFIX_WRITER_H_
 
+#include <cstdint>
 #include <string>
 #include <vector>
 
@@ -68,14 +69,10 @@ class PrefixWriter : public google::protobuf::util::converter::ObjectWriter {
   PrefixWriter* StartList(internal::string_view name);
   PrefixWriter* EndList();
   PrefixWriter* RenderBool(internal::string_view name, bool value);
-  PrefixWriter* RenderInt32(internal::string_view name,
-                            google::protobuf::int32 value);
-  PrefixWriter* RenderUint32(internal::string_view name,
-                             google::protobuf::uint32 value);
-  PrefixWriter* RenderInt64(internal::string_view name,
-                            google::protobuf::int64 value);
-  PrefixWriter* RenderUint64(internal::string_view name,
-                             google::protobuf::uint64 value);
+  PrefixWriter* RenderInt32(internal::string_view name, int32_t value);
+  PrefixWriter* RenderUint32(internal::string_view name, uint32_t value);
+  PrefixWriter* RenderInt64(internal::string_view name, int64_t value);
+  PrefixWriter* RenderUint64(internal::string_view name, uint64_t value);
   PrefixWriter* RenderDouble(internal::string_view name, double value);
   PrefixWriter* RenderFloat(internal::string_view name, float value);
   PrefixWriter* RenderString(internal::string_view name,
diff --git a/src/include/grpc_transcoding/request_stream_translator.h b/src/include/grpc_transcoding/request_stream_translator.h
index 88ad8c6..71b9a80 100644
--- a/src/include/grpc_transcoding/request_stream_translator.h
+++ b/src/include/grpc_transcoding/request_stream_translator.h
@@ -15,6 +15,7 @@
 #ifndef GRPC_TRANSCODING_REQUEST_STREAM_TRANSLATOR_H_
 #define GRPC_TRANSCODING_REQUEST_STREAM_TRANSLATOR_H_
 
+#include <cstdint>
 #include <deque>
 #include <functional>
 #include <memory>
@@ -81,13 +82,13 @@ class RequestStreamTranslator
   RequestStreamTranslator* EndList();
   RequestStreamTranslator* RenderBool(internal::string_view name, bool value);
   RequestStreamTranslator* RenderInt32(internal::string_view name,
-                                       google::protobuf::int32 value);
+                                       int32_t value);
   RequestStreamTranslator* RenderUint32(internal::string_view name,
-                                        google::protobuf::uint32 value);
+                                        uint32_t value);
   RequestStreamTranslator* RenderInt64(internal::string_view name,
-                                       google::protobuf::int64 value);
+                                       int64_t value);
   RequestStreamTranslator* RenderUint64(internal::string_view name,
-                                        google::protobuf::uint64 value);
+                                        uint64_t value);
   RequestStreamTranslator* RenderDouble(internal::string_view name,
                                         double value);
   RequestStreamTranslator* RenderFloat(internal::string_view name, float value);
diff --git a/src/include/grpc_transcoding/request_weaver.h b/src/include/grpc_transcoding/request_weaver.h
index 4cc0e01..cb63dcd 100644
--- a/src/include/grpc_transcoding/request_weaver.h
+++ b/src/include/grpc_transcoding/request_weaver.h
@@ -15,6 +15,7 @@
 #ifndef GRPC_TRANSCODING_REQUEST_WEAVER_H_
 #define GRPC_TRANSCODING_REQUEST_WEAVER_H_
 
+#include <cstdint>
 #include <list>
 #include <stack>
 #include <string>
@@ -86,14 +87,10 @@ class RequestWeaver : public google::protobuf::util::converter::ObjectWriter {
   RequestWeaver* StartList(internal::string_view name);
   RequestWeaver* EndList();
   RequestWeaver* RenderBool(internal::string_view name, bool value);
-  RequestWeaver* RenderInt32(internal::string_view name,
-                             google::protobuf::int32 value);
-  RequestWeaver* RenderUint32(internal::string_view name,
-                              google::protobuf::uint32 value);
-  RequestWeaver* RenderInt64(internal::string_view name,
-                             google::protobuf::int64 value);
-  RequestWeaver* RenderUint64(internal::string_view name,
-                              google::protobuf::uint64 value);
+  RequestWeaver* RenderInt32(internal::string_view name, int32_t value);
+  RequestWeaver* RenderUint32(internal::string_view name, uint32_t value);
+  RequestWeaver* RenderInt64(internal::string_view name, int64_t value);
+  RequestWeaver* RenderUint64(internal::string_view name, uint64_t value);
   RequestWeaver* RenderDouble(internal::string_view name, double value);
   RequestWeaver* RenderFloat(internal::string_view name, float value);
   RequestWeaver* RenderString(internal::string_view name,
diff --git a/src/prefix_writer.cc b/src/prefix_writer.cc
index dd150e0..0b1e7cb 100644
--- a/src/prefix_writer.cc
+++ b/src/prefix_writer.cc
@@ -16,6 +16,7 @@
 //
 #include "grpc_transcoding/prefix_writer.h"
 
+#include <cstdint>
 #include <string>
 
 #include "absl/strings/str_split.h"
@@ -77,7 +78,7 @@ PrefixWriter* PrefixWriter::RenderBool(internal::string_view name, bool value) {
 }
 
 PrefixWriter* PrefixWriter::RenderInt32(internal::string_view name,
-                                        google::protobuf::int32 value) {
+                                        int32_t value) {
   bool root = non_actionable_depth_ == 0;
   if (root) {
     name = StartPrefix(name);
@@ -90,7 +91,7 @@ PrefixWriter* PrefixWriter::RenderInt32(internal::string_view name,
 }
 
 PrefixWriter* PrefixWriter::RenderUint32(internal::string_view name,
-                                         google::protobuf::uint32 value) {
+                                         uint32_t value) {
   bool root = non_actionable_depth_ == 0;
   if (root) {
     name = StartPrefix(name);
@@ -103,7 +104,7 @@ PrefixWriter* PrefixWriter::RenderUint32(internal::string_view name,
 }
 
 PrefixWriter* PrefixWriter::RenderInt64(internal::string_view name,
-                                        google::protobuf::int64 value) {
+                                        int64_t value) {
   bool root = non_actionable_depth_ == 0;
   if (root) {
     name = StartPrefix(name);
@@ -116,7 +117,7 @@ PrefixWriter* PrefixWriter::RenderInt64(internal::string_view name,
 }
 
 PrefixWriter* PrefixWriter::RenderUint64(internal::string_view name,
-                                         google::protobuf::uint64 value) {
+                                         uint64_t value) {
   bool root = non_actionable_depth_ == 0;
   if (root) {
     name = StartPrefix(name);
diff --git a/src/request_weaver.cc b/src/request_weaver.cc
index 89fdbd1..2c4411e 100644
--- a/src/request_weaver.cc
+++ b/src/request_weaver.cc
@@ -19,6 +19,7 @@
 #include <float.h>
 
 #include <cmath>
+#include <cstdint>
 #include <limits>
 #include <string>
 #include <vector>
@@ -234,7 +235,7 @@ RequestWeaver* RequestWeaver::RenderBool(internal::string_view name,
 }
 
 RequestWeaver* RequestWeaver::RenderInt32(internal::string_view name,
-                                          google::protobuf::int32 value) {
+                                          int32_t value) {
   if (non_actionable_depth_ == 0) {
     pbconv::DataPiece value_in_body = pbconv::DataPiece(value);
     CollisionCheck(name, value_in_body);
@@ -244,7 +245,7 @@ RequestWeaver* RequestWeaver::RenderInt32(internal::string_view name,
 }
 
 RequestWeaver* RequestWeaver::RenderUint32(internal::string_view name,
-                                           google::protobuf::uint32 value) {
+                                           uint32_t value) {
   if (non_actionable_depth_ == 0) {
     pbconv::DataPiece value_in_body = pbconv::DataPiece(value);
     CollisionCheck(name, value_in_body);
@@ -254,7 +255,7 @@ RequestWeaver* RequestWeaver::RenderUint32(internal::string_view name,
 }
 
 RequestWeaver* RequestWeaver::RenderInt64(internal::string_view name,
-                                          google::protobuf::int64 value) {
+                                          int64_t value) {
   if (non_actionable_depth_ == 0) {
     pbconv::DataPiece value_in_body = pbconv::DataPiece(value);
     CollisionCheck(name, value_in_body);
@@ -264,7 +265,7 @@ RequestWeaver* RequestWeaver::RenderInt64(internal::string_view name,
 }
 
 RequestWeaver* RequestWeaver::RenderUint64(internal::string_view name,
-                                           google::protobuf::uint64 value) {
+                                           uint64_t value) {
   if (non_actionable_depth_ == 0) {
     pbconv::DataPiece value_in_body = pbconv::DataPiece(value);
     CollisionCheck(name, value_in_body);
diff --git a/test/prefix_writer_test.cc b/test/prefix_writer_test.cc
index 5484970..12d14a6 100644
--- a/test/prefix_writer_test.cc
+++ b/test/prefix_writer_test.cc
@@ -16,6 +16,7 @@
 //
 #include "grpc_transcoding/prefix_writer.h"
 
+#include <cstdint>
 #include <memory>
 #include <string>
 
@@ -49,10 +50,10 @@ TEST_F(PrefixWriterTest, EmptyPrefix) {
   expect_.StartObject("A");
   expect_.RenderString("x", "a");
   expect_.RenderBytes("by", "b");
-  expect_.RenderInt32("i", google::protobuf::int32(1));
-  expect_.RenderUint32("ui", google::protobuf::uint32(2));
-  expect_.RenderInt64("i64", google::protobuf::int64(3));
-  expect_.RenderUint64("ui64", google::protobuf::uint64(4));
+  expect_.RenderInt32("i", int32_t(1));
+  expect_.RenderUint32("ui", uint32_t(2));
+  expect_.RenderInt64("i64", int64_t(3));
+  expect_.RenderUint64("ui64", uint64_t(4));
   expect_.RenderBool("b", true);
   expect_.RenderNull("null");
   expect_.StartObject("B");
@@ -67,10 +68,10 @@ TEST_F(PrefixWriterTest, EmptyPrefix) {
   w->StartObject("A");
   w->RenderString("x", "a");
   w->RenderBytes("by", "b");
-  w->RenderInt32("i", google::protobuf::int32(1));
-  w->RenderUint32("ui", google::protobuf::uint32(2));
-  w->RenderInt64("i64", google::protobuf::int64(3));
-  w->RenderUint64("ui64", google::protobuf::uint64(4));
+  w->RenderInt32("i", int32_t(1));
+  w->RenderUint32("ui", uint32_t(2));
+  w->RenderInt64("i64", int64_t(3));
+  w->RenderUint64("ui64", uint64_t(4));
   w->RenderBool("b", true);
   w->RenderNull("null");
   w->StartObject("B");
@@ -120,19 +121,19 @@ TEST_F(PrefixWriterTest, OneLevelPrefix2) {
   expect_.EndObject();  // "A"
 
   expect_.StartObject("i32");
-  expect_.RenderInt32("A", google::protobuf::int32(-32));
+  expect_.RenderInt32("A", int32_t(-32));
   expect_.EndObject();  // "A"
 
   expect_.StartObject("ui32");
-  expect_.RenderUint32("A", google::protobuf::uint32(32));
+  expect_.RenderUint32("A", uint32_t(32));
   expect_.EndObject();  // "A"
 
   expect_.StartObject("i64");
-  expect_.RenderInt64("A", google::protobuf::int64(-64));
+  expect_.RenderInt64("A", int64_t(-64));
   expect_.EndObject();  // "A"
 
   expect_.StartObject("ui64");
-  expect_.RenderUint64("A", google::protobuf::uint64(64));
+  expect_.RenderUint64("A", uint64_t(64));
   expect_.EndObject();  // "A"
 
   expect_.StartObject("b");
@@ -147,10 +148,10 @@ TEST_F(PrefixWriterTest, OneLevelPrefix2) {
 
   w->RenderString("x", "a");
   w->RenderBytes("by", "b");
-  w->RenderInt32("i32", google::protobuf::int32(-32));
-  w->RenderUint32("ui32", google::protobuf::uint32(32));
-  w->RenderInt64("i64", google::protobuf::int64(-64));
-  w->RenderUint64("ui64", google::protobuf::uint64(64));
+  w->RenderInt32("i32", int32_t(-32));
+  w->RenderUint32("ui32", uint32_t(32));
+  w->RenderInt64("i64", int64_t(-64));
+  w->RenderUint64("ui64", uint64_t(64));
   w->RenderBool("b", false);
   w->RenderNull("nil");
 }
diff --git a/test/request_weaver_test.cc b/test/request_weaver_test.cc
index da2b026..9fc71ff 100644
--- a/test/request_weaver_test.cc
+++ b/test/request_weaver_test.cc
@@ -16,6 +16,7 @@
 //
 #include "grpc_transcoding/request_weaver.h"
 
+#include <cstdint>
 #include <memory>
 #include <string>
 #include <vector>
@@ -110,10 +111,10 @@ TEST_F(RequestWeaverTest, PassThrough) {
   w->StartObject("A");
   w->RenderString("x", "a");
   w->RenderBytes("by", "b");
-  w->RenderInt32("i", google::protobuf::int32(1));
-  w->RenderUint32("ui", google::protobuf::uint32(2));
-  w->RenderInt64("i64", google::protobuf::int64(3));
-  w->RenderUint64("ui64", google::protobuf::uint64(4));
+  w->RenderInt32("i", int32_t(1));
+  w->RenderUint32("ui", uint32_t(2));
+  w->RenderInt64("i64", int64_t(3));
+  w->RenderUint64("ui64", uint64_t(4));
   w->RenderBool("b", true);
   w->RenderNull("null");
   w->StartObject("B");
-- 
2.46.0.662.g92d0881bb0-goog

