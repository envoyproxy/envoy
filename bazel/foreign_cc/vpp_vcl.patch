diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 71f0010bb..377fe1a56 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -35,13 +35,7 @@ include(cmake/ccache.cmake)
 ##############################################################################
 # VPP Version
 ##############################################################################
-execute_process(
-  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
-  COMMAND scripts/version
-  OUTPUT_VARIABLE VPP_VERSION
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-
+set(VPP_VERSION 25.06-dev)
 if (VPP_PLATFORM)
   set(VPP_VERSION ${VPP_VERSION}-${VPP_PLATFORM_NAME})
 endif()
@@ -264,7 +258,6 @@ elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux|FreeBSD")
   find_package(OpenSSL)
   set(SUBDIRS
     vppinfra svm vlib vlibmemory vlibapi vnet vpp vat vat2 vcl vpp-api
-    plugins crypto_engines tools/vppapigen tools/g2 tools/perftool cmake pkg
     tools/appimage
   )
 elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
diff --git a/src/cmake/ccache.cmake b/src/cmake/ccache.cmake
index a7b395bc6..d6a4c5b30 100644
--- a/src/cmake/ccache.cmake
+++ b/src/cmake/ccache.cmake
@@ -14,7 +14,7 @@
 ##############################################################################
 # ccache
 ##############################################################################
-option(VPP_USE_CCACHE "Use ccache compiler cache." ON)
+option(VPP_USE_CCACHE "Use ccache compiler cache." OFF)
 if(VPP_USE_CCACHE)
   find_program(CCACHE_FOUND ccache)
   message(STATUS "Looking for ccache")
diff --git a/src/cmake/library.cmake b/src/cmake/library.cmake
index a06a795c6..eea0c73d3 100644
--- a/src/cmake/library.cmake
+++ b/src/cmake/library.cmake
@@ -24,7 +24,7 @@ macro(add_vpp_library lib)
   set_target_properties(${lo} PROPERTIES POSITION_INDEPENDENT_CODE ON)
   target_compile_options(${lo} PUBLIC ${VPP_DEFAULT_MARCH_FLAGS})
 
-  add_library(${lib} SHARED)
+  add_library(${lib} STATIC)
   target_sources(${lib} PRIVATE $<TARGET_OBJECTS:${lo}>)
 
   if(VPP_LIB_VERSION)
diff --git a/src/tools/vppapigen/CMakeLists.txt b/src/tools/vppapigen/CMakeLists.txt
index 97a6d35f9..55b662a8d 100644
--- a/src/tools/vppapigen/CMakeLists.txt
+++ b/src/tools/vppapigen/CMakeLists.txt
@@ -11,22 +11,6 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-find_package(
-  Python3
-  REQUIRED
-  COMPONENTS Interpreter
-)
-
-execute_process(
-  COMMAND ${Python3_EXECUTABLE} -c "import ply"
-  RESULT_VARIABLE _rv
-  OUTPUT_QUIET
-)
-
-if (NOT ${_rv} EQUAL 0)
-  message( FATAL_ERROR "The \"ply\" Python3 package is not installed.")
-endif()
-
 install(
   FILES vppapigen.py
   RENAME vppapigen
diff --git a/src/tools/vppapigen/vppapigen.py b/src/tools/vppapigen/vppapigen.py
index 0bed578eb..ed5b2ce75 100755
--- a/src/tools/vppapigen/vppapigen.py
+++ b/src/tools/vppapigen/vppapigen.py
@@ -7,6 +7,13 @@ import logging
 import binascii
 import os
 from subprocess import Popen, PIPE
+
+# Put ply on the path ...
+plypath = os.path.join(
+    os.environ["EXT_BUILD_ROOT"],
+    os.path.dirname(os.path.dirname(os.environ["PLYPATHS"].split()[0])))
+sys.path += [plypath]
+
 import ply.lex as lex
 import ply.yacc as yacc
 from io import TextIOWrapper
diff --git a/src/vcl/CMakeLists.txt b/src/vcl/CMakeLists.txt
index 2787ce678..8cbe2b4fc 100644
--- a/src/vcl/CMakeLists.txt
+++ b/src/vcl/CMakeLists.txt
@@ -41,6 +41,8 @@ if (LDP_HAS_GNU_SOURCE)
   add_compile_definitions(HAVE_GNU_SOURCE)
 endif(LDP_HAS_GNU_SOURCE)
 
+file(COPY vppcom.h DESTINATION ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
+
 if("${CMAKE_SYSTEM_NAME}" STREQUAL "FreeBSD")
   message("WARNING: vcl_ldpreload isn't supported on FreeBSD - disabled")
 else()
diff --git a/src/vppinfra/CMakeLists.txt b/src/vppinfra/CMakeLists.txt
index 131f5a5b5..06fe42179 100644
--- a/src/vppinfra/CMakeLists.txt
+++ b/src/vppinfra/CMakeLists.txt
@@ -27,7 +27,7 @@ vpp_find_library(LIBUNWIND_LIB NAMES unwind libunwind)
 if (LIBUNWIND_INCLUDE_DIR AND LIBUNWIND_LIB)
   message(STATUS "libunwind found at ${LIBUNWIND_LIB}")
   list(APPEND VPPINFRA_LIBS ${LIBUNWIND_LIB})
-  add_definitions(-DHAVE_LIBUNWIND=1)
+  add_definitions(-DHAVE_LIBUNWIND=0)
 else()
   message(WARNING "libunwind not found - stack traces disabled")
   add_definitions(-DHAVE_LIBUNWIND=0)
@@ -253,13 +253,26 @@ elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "FreeBSD")
    )
 endif()
 
-add_vpp_library(vppinfra
-  SOURCES ${VPPINFRA_SRCS}
-  LINK_LIBRARIES m ${VPPINFRA_LIBS}
-  INSTALL_HEADERS ${VPPINFRA_HEADERS}
-  COMPONENT libvppinfra
-  LTO
-)
+# GCC versions 11 and 12 at least have some kind of bug when
+# LTO runs out of memory and breaking Envoy builds with gcc
+# as a result. So we conditionally disable LTO on GCC builds
+# to workaround the issue.
+if(CMAKE_C_COMPILER_ID STREQUAL "GNU")
+  add_vpp_library(vppinfra
+    SOURCES ${VPPINFRA_SRCS}
+    LINK_LIBRARIES m ${VPPINFRA_LIBS}
+    INSTALL_HEADERS ${VPPINFRA_HEADERS}
+    COMPONENT libvppinfra
+  )
+else()
+  add_vpp_library(vppinfra
+    SOURCES ${VPPINFRA_SRCS}
+    LINK_LIBRARIES m ${VPPINFRA_LIBS}
+    INSTALL_HEADERS ${VPPINFRA_HEADERS}
+    COMPONENT libvppinfra
+    LTO
+  )
+endif()
 
 ##############################################################################
 # vppinfra headers
