name: Mobile/iOS tests

permissions:
  contents: read

on:
  workflow_run:
    workflows:
    - Request
    types:
    - completed


jobs:
  load:
    secrets:
      app-key: ${{ secrets.ENVOY_CI_APP_KEY }}
      app-id: ${{ secrets.ENVOY_CI_APP_ID }}
      lock-app-key: ${{ secrets.ENVOY_CI_MUTEX_APP_KEY }}
      lock-app-id: ${{ secrets.ENVOY_CI_MUTEX_APP_ID }}
    permissions:
      actions: read
      contents: read
      packages: read
      pull-requests: read
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    uses: ./.github/workflows/_load.yml
    with:
      cache-docker: false
      check-name: mobile-ios-tests

  tests:
    permissions:
      contents: read
      packages: read
    uses: ./.github/workflows/_run.yml
    if: ${{ fromJSON(needs.load.outputs.request).run.mobile-ios-tests }}
    needs: load
    name: ios-tests
    with:
      args: ${{ matrix.args }}
      command: ./bazelw
      container-command:
      request: ${{ needs.load.outputs.request }}
      runs-on: macos-12
      source: |
        source ./ci/mac_ci_setup.sh
      steps-post: ${{ matrix.steps-post }}
      target: ${{ matrix.target }}
      timeout-minutes: ${{ matrix.timeout-minutes }}
      trusted: ${{ fromJSON(needs.load.outputs.trusted) }}
      working-directory: mobile
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: Run swift library tests
          args: >-
            test
            --config=mobile-remote-ci-macos-ios-swift
            //test/swift/...
          target: swift-tests
          timeout-minutes: 120
        - name: Run Objective-C library tests
          args: >-
            test
            --config=mobile-remote-ci-macos-ios-obj-c
            //test/objective-c/...
            //test/cc/unit:envoy_config_test
          target: c-and-objc-tests
          timeout-minutes: 120

  request:
    secrets:
      app-id: ${{ secrets.ENVOY_CI_APP_ID }}
      app-key: ${{ secrets.ENVOY_CI_APP_KEY }}
    permissions:
      actions: read
      contents: read
      pull-requests: read
    if: >-
      ${{ always()
          && github.event.workflow_run.conclusion == 'success'
          && fromJSON(needs.load.outputs.request).run.mobile-ios-tests }}
    needs:
    - load
    - tests
    uses: ./.github/workflows/_finish.yml
    with:
      needs: ${{ toJSON(needs) }}
