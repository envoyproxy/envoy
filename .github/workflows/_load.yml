name: Request/load

permissions:
  contents: read

on:
  workflow_call:
    secrets:
      app-id:
        required: true
      app-key:
        required: true

    inputs:
      agent-ubuntu:
        type: string
        default: ubuntu-24.04
      check-name:
        type: string
        required: true
      check-title:
        type: string
        default:
      head-sha:
        type: string
        default:
      run-id:
        type: string
        default: ${{ github.event.workflow_run.id }}
      runs-after:
        type: boolean
        default: false
      template-request-summary:
        type: string
        default: |
          ## \($linkedTitle)

          \($summary)

          \($extra)

    outputs:
      build-image:
        value: ${{ jobs.request.outputs.build-image }}
      build-image-mobile:
        value: ${{ jobs.request.outputs.build-image-mobile }}
      check-id:
        value: ${{ jobs.request.outputs.check-id }}
      check-name:
        value: ${{ inputs.check-name }}
      request:
        value: ${{ jobs.request.outputs.request }}
      run-id:
        value: ${{ inputs.run-id }}
      trusted:
        value: ${{ jobs.request.outputs.trusted }}

concurrency:
  group: |
    ${{ github.actor != 'trigger-release-envoy[bot]'
        && github.head_ref
        || github.run_id
    }}-${{ github.workflow }}-env
  cancel-in-progress: true

env:
  CI_DEBUG: ${{ vars.CI_DEBUG && true || false }}


jobs:
  request:
    if: ${{ github.repository == 'envoyproxy/envoy' || vars.ENVOY_CI }}
    runs-on: ubuntu-24.04
    permissions:
      actions: read
      contents: read
      pull-requests: read
    outputs:
      build-image: ${{ toJSON(fromJSON(steps.request-output.outputs.value).request.build-image) }}
      build-image-mobile: ${{ fromJSON(steps.request-output.outputs.value).request.build-image-mobile }}
      check-id: ${{ fromJSON(steps.request-output.outputs.value).check.check-id }}
      request: ${{ steps.request-output.outputs.value }}
      trusted: ${{ fromJSON(steps.request-output.outputs.value).request.trusted }}
      skip: ${{ fromJSON(steps.request-output.outputs.value).check.action != 'RUN' }}
    steps:
    - run: |
        gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/actions/runs/${{ inputs.run-id }} \
          | jq '.'
        RUNID=$(gh run view ${{ inputs.run-id }} --repo ${{ github.repository }} --json databaseId | jq -r '.databaseId')
        echo "value=${RUNID}" >> "$GITHUB_OUTPUT"
      id: run-id
      if: ${{ inputs.runs-after == true }}
      env:
        GH_TOKEN: ${{ github.token }}

    # Load env data
    # Handle any failure in triggering job
    # Remove any `checks` we dont care about
    # Prepare a check request
    - uses: envoyproxy/toolshed/gh-actions/github/env/load@actions-v0.3.14
      name: Load env
      id: data
      with:
        run-id: ${{ steps.run-id.outputs.value || inputs.run-id }}
        check-name: ${{ inputs.check-name }}
        head-sha: ${{ inputs.head-sha }}
      env:
        GH_TOKEN: ${{ github.token }}

    #  Update the check
    - uses: envoyproxy/toolshed/gh-actions/appauth@actions-v0.3.14
      name: Appauth
      id: appauth
      with:
        app_id: ${{ secrets.app-id }}
        key: ${{ secrets.app-key }}
    - uses: envoyproxy/toolshed/gh-actions/github/checks@actions-v0.3.14
      name: Update check
      if: ${{ fromJSON(steps.data.outputs.data).data.check.action == 'RUN' }}
      with:
        action: update
        checks: ${{ toJSON(fromJSON(steps.data.outputs.data).checks) }}
        token: ${{ steps.appauth.outputs.token }}

    - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.3.14
      name: Print request summary
      with:
        input: |
          action: ${{ fromJSON(steps.data.outputs.data).data.check.action }}
          summary: ${{ toJSON(fromJSON(steps.data.outputs.data).data.summary) }}
        input-format: yaml
        output-path: GITHUB_STEP_SUMMARY
        options: -r
        filter: |
          .action as $action
          | .summary as $summary
          | if ($action != "RUN") then
              "### ${{ github.workflow }} was skipped"
            else "" end
          | . as $extra
          | $summary["linked-title"] as $linkedTitle
          | $summary.summary as $summary
          | "${{ inputs.template-request-summary }}"

    - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.3.14
      id: request-output
      name: Load request
      with:
        input: |
          check: ${{ toJSON(fromJSON(steps.data.outputs.data).data.check) }}
          config: ${{ toJSON(fromJSON(steps.data.outputs.data).data.config) }}
          request: ${{ toJSON(fromJSON(steps.data.outputs.data).data.request) }}
          run: ${{ toJSON(fromJSON(steps.data.outputs.data).data.run) }}
          summary_title: ${{ fromJSON(steps.data.outputs.data).data.summary.title }}
        input-format: yaml
        filter: |
          .
          | .summary = {title: .summary_title}
          | del(.request.message, .summary_title)
        print-result: ${{ fromJSON(env.CI_DEBUG || 'false') && true || false }}
