name: Check/coverage

permissions:
  contents: read

on:
  workflow_call:
    secrets:
      gcs-cache-key:
        required: true
      gcp-key:
        required: true

    inputs:
      gcs-cache-bucket:
        type: string
        required: true
      request:
        type: string
        required: true
      trusted:
        type: boolean
        required: true

concurrency:
  group: ${{ github.head_ref || github.run_id }}-${{ github.workflow }}-coverage
  cancel-in-progress: true


jobs:
  coverage:
    secrets:
      gcs-cache-key: ${{ secrets.gcs-cache-key }}
      gcp-key: ${{ secrets.gcp-key }}
    permissions:
      contents: read
      packages: read
    uses: ./.github/workflows/_run.yml
    name: ${{ matrix.name ||matrix.target }}
    with:
      # bazel-extra: '--config=remote-envoy-engflow'
      cache-build-image: ${{ fromJSON(inputs.request).request.build-image.default }}
      concurrency-suffix: -${{ matrix.target }}
      diskspace-hack: ${{ matrix.diskspace-hack && true || false }}
      diskspace-hack-paths: ${{ matrix.diskspace-hack-paths }}
      error-match: |
        ERROR
        error:
        Error:
        lower than limit
      gcs-cache-bucket: ${{ inputs.gcs-cache-bucket }}
      rbe: true
      rbe-google: true
      request: ${{ inputs.request }}
      runs-on: ${{ fromJSON(inputs.request).config.ci.agent-ubuntu }}
      steps-post: |
        - uses: envoyproxy/toolshed/gh-actions/gcs/artefact/sync@actions-v0.3.13
          with:
            bucket: ${{ inputs.trusted && vars.GCS_ARTIFACT_BUCKET_POST || vars.GCS_ARTIFACT_BUCKET_PRE }}
            path: generated/${{ matrix.target }}
            path-upload: ${{ matrix.target }}
            sha: ${{ fromJSON(inputs.request).request.sha }}
            redirect: >-
              ${{ vars.GCS_ARTIFACT_PREFIX
                  && format('{0}-', vars.GCS_ARTIFACT_PREFIX)
              }}${{ fromJSON(inputs.request).request.pr
                    || fromJSON(inputs.request).request.target-branch }}
      target: ${{ matrix.target }}
      timeout-minutes: 180
      trusted: ${{ inputs.trusted }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - target: coverage
          name: Coverage
          diskspace-hack: true
          diskspace-hack-paths: |
            /opt/hostedtoolcache
        - target: fuzz_coverage
          name: Fuzz coverage
