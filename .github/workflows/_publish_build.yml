name: Build

permissions:
  contents: read

on:
  workflow_call:
    secrets:
      gcs-cache-key:
        required: true
      gpg-key:
        required: true
      gpg-key-password:
        required: true
    inputs:
      arch:
        type: string
        required: true
      gcs-cache-bucket:
        type: string
        required: true
      request:
        type: string
        required: true
      trusted:
        type: boolean
        required: true


concurrency:
  group: >-
    ${{ github.actor != 'trigger-release-envoy[bot]'
        && github.event.inputs.head_ref
        || github.run_id
    }}-${{ inputs.arch }}-${{ github.event.workflow.id }}-publish
  cancel-in-progress: true


jobs:
  binary:
    secrets:
      gcs-cache-key: ${{ secrets.gcs-cache-key }}
    permissions:
      contents: read
      packages: read
    name: Binary
    uses: ./.github/workflows/_run.yml
    with:
      arch: ${{ inputs.arch }}
      bazel-extra: >-
        --config=remote-envoy-engflow
      target: release.server_only
      target-suffix: ${{ inputs.arch }}
      cache-build-image: ${{ fromJSON(inputs.request).request.build-image.default }}
      cache-build-image-key-suffix: ${{ inputs.arch == 'arm64' && '-arm64' || '' }}
      concurrency-suffix: -${{ inputs.arch }}
      gcs-cache-bucket: ${{ inputs.gcs-cache-bucket }}
      rbe: true
      request: ${{ inputs.request }}
      runs-on: ${{ inputs.arch == 'arm64' && (vars.ENVOY_ARM_VM || 'ubuntu-24.04-arm') || null }}
      timeout-minutes: 120
      trusted: ${{ inputs.trusted }}
      upload-name: release.${{ inputs.arch }}
      upload-path: envoy/${{ inputs.arch }}/bin/

  docker:
    permissions:
      contents: read
      packages: read
    name: Docker OCI
    needs:
    - binary
    uses: ./.github/workflows/_run.yml
    with:
      arch: ${{ inputs.arch }}
      target: docker
      target-suffix: ${{ inputs.arch }}
      cache-build-image: ${{ fromJSON(inputs.request).request.build-image.default }}
      cache-build-image-key-suffix: ${{ inputs.arch == 'arm64' && '-arm64' || '' }}
      concurrency-suffix: -${{ inputs.arch }}
      downloads: |
        release.${{ inputs.arch }}: envoy/${{ inputs.arch }}/bin/
      request: ${{ inputs.request }}
      source: |
        export NO_BUILD_SETUP=1
        export ENVOY_DOCKER_IN_DOCKER=1
        export ENVOY_DOCKER_SAVE_IMAGE=true
        export ENVOY_OCI_DIR=build_images

        # export DOCKER_BUILD_PLATFORM=${{ inputs.arch == 'x64' && 'linux/amd64' || 'linux/arm64' }}
        # export DOCKER_LOAD_IMAGES=true
        # export DOCKER_FORCE_OCI_OUTPUT=true
      trusted: ${{ inputs.trusted }}
      upload-name: oci.${{ inputs.arch }}
      upload-path: envoy/${{ inputs.arch }}/build_images
      runs-on: ${{ inputs.arch == 'arm64' && (vars.ENVOY_ARM_VM || 'ubuntu-24.04-arm') || null }}

  distribution:
    permissions:
      contents: read
      packages: read
    secrets:
      gcs-cache-key: ${{ secrets.gcs-cache-key }}
      gpg-key: ${{ secrets.gpg-key }}
      gpg-key-password: ${{ secrets.gpg-key-password }}
    name: Packages
    needs:
    - binary
    uses: ./.github/workflows/_run.yml
    with:
      arch: ${{ inputs.arch }}
      bazel-extra: >-
        --config=remote-cache-envoy-engflow
      downloads: |
        release.${{ inputs.arch }}: release/${{ inputs.arch }}/bin/
      target: distribution
      target-suffix: ${{ inputs.arch }}
      cache-build-image: ${{ fromJSON(inputs.request).request.build-image.default }}
      cache-build-image-key-suffix: ${{ inputs.arch == 'arm64' && '-arm64' || '' }}
      concurrency-suffix: -${{ inputs.arch }}
      gcs-cache-bucket: ${{ inputs.gcs-cache-bucket }}
      import-gpg: true
      rbe: false
      request: ${{ inputs.request }}
      runs-on: ${{ inputs.arch == 'arm64' && (vars.ENVOY_ARM_VM || 'ubuntu-24.04-arm') || null }}
      trusted: ${{ inputs.trusted }}
      upload-name: packages.${{ inputs.arch }}
      upload-path: envoy/${{ inputs.arch }}
