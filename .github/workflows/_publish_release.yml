name: Publish

permissions:
  contents: read

on:
  workflow_call:
    secrets:
      dockerhub-password:
      dockerhub-username:
      ENVOY_CI_SYNC_APP_ID:
      ENVOY_CI_SYNC_APP_KEY:
      ENVOY_CI_PUBLISH_APP_ID:
      ENVOY_CI_PUBLISH_APP_KEY:
      gcs-cache-key:
        required: true
      gpg-key:
        required: true
      gpg-key-password:
        required: true
    inputs:
      gcs-cache-bucket:
        type: string
        required: true
      request:
        type: string
        required: true
      trusted:
        type: boolean
        required: true

concurrency:
  group: >-
    ${{ github.actor != 'trigger-release-envoy[bot]'
        && github.event.inputs.head_ref
        || github.run_id
    }}-${{ github.event.workflow.id }}-publish
  cancel-in-progress: true


jobs:
  sign:
    permissions:
      contents: read
      packages: read
    secrets:
      gcs-cache-key: ${{ secrets.gcs-cache-key }}
      gpg-key: ${{ secrets.gpg-key }}
      gpg-key-password: ${{ secrets.gpg-key-password }}
    if: ${{ vars.ENVOY_CI_RELEASE || github.repository == 'envoyproxy/envoy' }}
    name: Sign packages
    uses: ./.github/workflows/_run.yml
    with:
      target: release.signed
      bazel-extra: >-
        --//distribution:x64-packages=//distribution:custom/x64/packages.x64.tar.gz
        --//distribution:arm64-packages=//distribution:custom/arm64/packages.arm64.tar.gz
        --//distribution:x64-release=//distribution:custom/x64/bin/release.tar.zst
        --//distribution:arm64-release=//distribution:custom/arm64/bin/release.tar.zst
      cache-build-image: ${{ fromJSON(inputs.request).request.build-image.default }}
      diskspace-hack: true
      downloads: |
        packages.arm64: envoy/arm64/
        packages.x64: envoy/x64/
        release.arm64: envoy/arm64/bin/
        release.x64: envoy/x64/bin/
      gcs-cache-bucket: ${{ inputs.gcs-cache-bucket }}
      import-gpg: true
      request: ${{ inputs.request }}
      source: |
        export NO_BUILD_SETUP=1
      trusted: ${{ inputs.trusted }}
      upload-name: release.signed
      upload-path: envoy/release.signed.tar.zst
      steps-pre: |
        - run: |
            mkdir distribution/custom
            cp -a %{{ runner.temp }}/envoy/x64 %{{ runner.temp }}/envoy/arm64 distribution/custom
          shell: bash

  container:
    secrets:
      dockerhub-username: ${{ secrets.dockerhub-username }}
      dockerhub-password: ${{ secrets.dockerhub-password }}
    permissions:
      contents: read
      packages: read
    name: Publish container images
    uses: ./.github/workflows/_publish_release_container.yml
    with:
      dockerhub-repo: ${{ vars.DOCKERHUB_REPO || 'envoy' }}
      dev: ${{ fromJSON(inputs.request).request.version.dev }}
      sha: ${{ fromJSON(inputs.request).request.sha }}
      target-branch: ${{ fromJSON(inputs.request).request.target-branch }}
      trusted: ${{ inputs.trusted }}
      version-major: ${{ fromJSON(inputs.request).request.version.major }}
      version-minor: ${{ fromJSON(inputs.request).request.version.minor }}
      version-patch: ${{ fromJSON(inputs.request).request.version.patch }}

  release:
    secrets:
      app-id: ${{ inputs.trusted && secrets.ENVOY_CI_PUBLISH_APP_ID || '' }}
      app-key: ${{ inputs.trusted && secrets.ENVOY_CI_PUBLISH_APP_KEY || '' }}
      gcs-cache-key: ${{ secrets.gcs-cache-key }}
    permissions:
      contents: read
      packages: read
    needs:
    - container
    - sign
    name: ${{ matrix.name || matrix.target }}
    uses: ./.github/workflows/_run.yml
    with:
      target: ${{ matrix.target }}
      rbe: false
      cache-build-image: ${{ fromJSON(inputs.request).request.build-image.default }}
      downloads: |
        release.signed: release.signed
      gcs-cache-bucket: ${{ inputs.gcs-cache-bucket }}
      source: ${{ matrix.source }}
      request: ${{ inputs.request }}
      steps-pre: ${{ matrix.steps-pre }}
      trusted: ${{ inputs.trusted }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - target: publish
          name: github
          source: |
            export ENVOY_COMMIT=${{ fromJSON(inputs.request).request.sha }}
            export ENVOY_REPO=${{ github.repository }}
            export ENVOY_PUBLISH_DRY_RUN=${{ (fromJSON(inputs.request).request.version.dev || ! inputs.trusted) && 1 || '' }}

  docs:
    # For normal commits to Envoy main this will trigger an update in the website repo,
    # which will update its envoy dep shas, and rebuild the website for the latest docs
    #
    # For commits that create a release, it instead triggers an update in the archive repo,
    # which builds a static version of the docs for the release and commits it to the archive.
    # In turn the archive repo triggers an update in the website so the new release docs are
    # included in the published site
    if: ${{ inputs.trusted && github.repository == 'envoyproxy/envoy' }}
    runs-on: ${{ fromJSON(inputs.request).config.ci.agent-ubuntu }}
    needs:
    - release
    steps:
    - uses: envoyproxy/toolshed/gh-actions/appauth@actions-v0.3.24
      id: appauth
      with:
        app_id: ${{ secrets.ENVOY_CI_SYNC_APP_ID }}
        key: ${{ secrets.ENVOY_CI_SYNC_APP_KEY }}
    - uses: envoyproxy/toolshed/gh-actions/dispatch@actions-v0.3.24
      with:
        ref: main
        repository: ${{ fromJSON(inputs.request).request.version.dev && 'envoyproxy/envoy-website' || 'envoyproxy/archive' }}
        token: ${{ steps.appauth.outputs.token }}
        workflow: envoy-sync.yaml
        inputs: |
          commit_sha: ${{ fromJSON(inputs.request).request.version.dev && github.sha || '' }}
