# Envoy Mobile MODULE.bazel
#
# This file configures dependencies for Envoy Mobile builds, extending the main
# Envoy MODULE.bazel with mobile-specific requirements:
#
# - Android SDK/NDK toolchains via native rules_android extensions
# - Mobile development dependencies (Kotlin, JVM, Swift)
# - Maven artifact management for Java/Kotlin dependencies
# - Synchronized git overrides with main Envoy module for consistency
#
# Architecture:
# - Inherits core Envoy dependencies via local_path_override
# - Uses consolidated extensions from parent Envoy module where possible
# - Adds mobile-specific extensions following same core + toolchains pattern
#
# See BZLMOD_MIGRATION.md for detailed architecture documentation.

module(
    name = "envoy_mobile",
    version = "0.0.0-dev",
)

# Essential Bazel dependencies
bazel_dep(name = "bazel_skylib", version = "1.8.1")

# Core Envoy dependencies - inherited from parent module
bazel_dep(name = "envoy", version = "0.0.0-dev")
local_path_override(
    module_name = "envoy",
    path = "..",
)

bazel_dep(name = "envoy_api", version = "0.0.0-dev")
local_path_override(
    module_name = "envoy_api",
    path = "../api",
)

bazel_dep(name = "envoy_build_config", version = "0.0.0-dev")
local_path_override(
    module_name = "envoy_build_config",
    path = "envoy_build_config",
)

# Git overrides for external Envoy repositories
# These commit hashes are synchronized with the main MODULE.bazel to ensure consistency
# and prevent git_override strip_prefix issues.

# bazel_dep(name = "envoy_examples", version = "0.0.0-dev")
# git_override(
#     module_name = "envoy_examples",
#     commit = "ff286d4049b6339cf84c912f5e06f67b0061f017",  # Synchronized with main MODULE.bazel
#     remote = "https://github.com/envoyproxy/examples.git",
# )

# bazel_dep(name = "envoy-example-wasmcc", version = "0.0.0-dev")
# git_override(
#     module_name = "envoy-example-wasmcc",
#     commit = "ff286d4049b6339cf84c912f5e06f67b0061f017",  # Synchronized with main MODULE.bazel
#     remote = "https://github.com/envoyproxy/examples.git",
#     strip_prefix = "wasm-cc/",
# )

bazel_dep(name = "envoy_toolshed", version = "0.3.3")
git_override(
    module_name = "envoy_toolshed",
    commit = "f536601588f6a523346091adb3420d39b4692d3a",
    remote = "https://github.com/envoyproxy/toolshed.git",
    strip_prefix = "bazel/",
)

bazel_dep(name = "gazelle", version = "0.45.0", repo_name = "bazel_gazelle")
bazel_dep(name = "googleapis", version = "0.0.0-20241220-5e258e33.bcr.1", repo_name = "com_google_googleapis")
bazel_dep(name = "googletest", version = "1.17.0", repo_name = "com_google_googletest")
# bazel_dep(name = "googleurl", version = "0.0.0-dev", repo_name = "com_googlesource_googleurl")
# git_override(
#     module_name = "googleurl",
#     commit = "e6c272102e0554e02c1bb317edff927ee56c7d0b",
#     remote = "https://quiche.googlesource.com/googleurl",
# )

bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "protobuf", version = "29.3", repo_name = "com_google_protobuf")
bazel_dep(name = "protoc-gen-validate", version = "1.2.1.bcr.1", repo_name = "com_envoyproxy_protoc_gen_validate")
bazel_dep(name = "re2", version = "2024-07-02.bcr.1", repo_name = "com_googlesource_code_re2")

# Mobile-specific build rules and dependencies
# These provide native Android, iOS, and cross-platform mobile development support
bazel_dep(name = "rules_android", version = "0.1.1")  # Android SDK integration
bazel_dep(name = "rules_android_ndk", version = "0.1.2")  # Android NDK toolchain
bazel_dep(name = "rules_cc", version = "0.2.8")  # C++ build rules
bazel_dep(name = "rules_detekt", version = "0.8.1.2")  # Kotlin linting

# rules_foreign_cc override needed for mobile builds until upstream issue is resolved
# TODO(yannic): Remove once https://github.com/bazelbuild/rules_foreign_cc/pull/938 is merged and released
bazel_dep(name = "rules_foreign_cc", version = "0.15.0")
bazel_dep(name = "rules_jvm_external", version = "6.6")  # Maven dependency management
bazel_dep(name = "rules_kotlin", version = "1.9.6")  # Kotlin language support
bazel_dep(name = "rules_pkg", version = "1.1.0")  # Package building
bazel_dep(name = "rules_python", version = "1.4.1")  # Python toolchain
bazel_dep(name = "rules_rust", version = "0.63.0")  # Rust toolchain
bazel_dep(name = "rules_swift", version = "2.1.1", repo_name = "build_bazel_rules_swift")  # iOS/Swift support

switched_rules = use_extension("@com_google_googleapis//:extensions.bzl", "switched_rules")
switched_rules.use_languages(
    cc = True,
    go = True,
    grpc = True,
    python = True,
)
use_repo(switched_rules, "com_google_googleapis_imports")

# Envoy dependencies extensions - using consolidated extensions from parent envoy module
envoy_core = use_extension("@envoy//bazel/extensions:core.bzl", "core")
use_repo(
    envoy_core,
    "build_bazel_rules_apple",
    "com_google_absl",
    "rules_proto_grpc",
)

envoy_toolchains = use_extension("@envoy//bazel/extensions:toolchains.bzl", "toolchains")

# API extensions from API module
envoy_api_deps = use_extension("@envoy_api//bazel/extensions:api_dependencies.bzl", "envoy_api_deps")

# Envoy Mobile extensions - streamlined design following bzlmod best practices
# This architecture mirrors the main envoy module for consistency

# Mobile-specific dependencies extension
envoy_mobile_core = use_extension("//bazel/extensions:core.bzl", "core")
use_repo(
    envoy_mobile_core,
    "DrString",
    "SwiftLint",
    "com_github_buildbuddy_io_rules_xcodeproj",
    "google_bazel_common",
    "kotlin_formatter",
    "robolectric",
    "rules_java",
)

# Native Android SDK configuration using rules_android extension
# This replaces custom Android SDK setup with native bzlmod extension support
android_sdk_repository_extension = use_extension("@rules_android//rules/android_sdk_repository:rule.bzl", "android_sdk_repository_extension")
android_sdk_repository_extension.configure(
    api_level = 30,  # Target Android API level
    build_tools_version = "30.0.2",  # Android build tools version
)

# Native Android NDK configuration using rules_android_ndk extension
# This provides native C++ compilation support for Android targets
android_ndk_repository_extension = use_extension("@rules_android_ndk//:extension.bzl", "android_ndk_repository_extension")
android_ndk_repository_extension.configure(
    api_level = 23,  # Minimum Android API level for NDK
)

# Mobile toolchains extension (remaining custom setup)
envoy_mobile_toolchains = use_extension("//bazel/extensions:toolchains.bzl", "toolchains")

# Python dependencies using upstream rules_python extensions
python = use_extension("@rules_python//python/extensions:python.bzl", "python", dev_dependency = True)
python.toolchain(
    python_version = "3.12.3",
)

# Maven dependencies using native rules_jvm_external extension
# This provides Java/Kotlin dependencies for Android development, testing, and documentation
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        # Core Java dependencies
        "com.google.code.findbugs:jsr305:3.0.2",
        "androidx.annotation:annotation:1.5.0",
        # Java Proto Lite
        "com.google.protobuf:protobuf-javalite:3.24.4",
        # Kotlin runtime libraries
        "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.21",
        "org.jetbrains.kotlin:kotlin-stdlib-common:1.6.21",
        "org.jetbrains.kotlin:kotlin-stdlib:1.6.21",
        # Android UI libraries
        "androidx.recyclerview:recyclerview:1.1.0",
        "androidx.core:core:1.3.2",
        # Dokka documentation generation
        "org.jetbrains.dokka:dokka-cli:1.5.31",
        "org.jetbrains.dokka:javadoc-plugin:1.5.31",
        # Test dependencies
        "com.google.truth:truth:1.4.4",
        "junit:junit:4.13.2",
        "org.mockito:mockito-inline:5.2.0",
        "org.mockito:mockito-core:5.14.2",
        "com.squareup.okhttp3:okhttp:4.12.0",
        "com.squareup.okhttp3:mockwebserver:4.12.0",
        "io.netty:netty-all:4.1.115.Final",
        # Android test framework
        "androidx.test:core:1.5.0",
        "androidx.test:rules:1.5.0",
        "androidx.test:runner:1.5.0",
        "androidx.test:monitor:1.5.0",
        "androidx.test.ext:junit:1.1.5",
        "org.robolectric:robolectric:4.8.2",
        "org.hamcrest:hamcrest:3.0",
    ],
    repositories = [
        "https://repo1.maven.org/maven2",  # Maven Central
        "https://maven.google.com",  # Google Maven Repository
    ],
    version_conflict_policy = "pinned",  # Use exact versions to ensure reproducible builds
)
use_repo(maven, "maven")
