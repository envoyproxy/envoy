syntax = "proto3";

package envoy.extensions.access_loggers.filters.local_ratelimit.v3;

import "envoy/config/core/v3/config_source.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.access_loggers.filters.local_ratelimit.v3";
option java_outer_classname = "LocalRatelimitProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/access_loggers/filters/local_ratelimit/v3;local_ratelimitv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: LocalRateLimitFilter]
// [#extension: envoy.access_loggers.extension_filters.local_ratelimit]

// Filters for rate limiting the access logs using token buckets. It relies on ``envoy.type.v3.TokenBucketConfig`` for token bucket sharing within process.
message LocalRateLimitFilter {
  // Specify the ``name``` field of the ``envoy.type.v3.TokenBucketConfig`` for lookup.
  string resource_name = 1 [(validate.rules).string = {min_len: 1}];

  // The configuration source for the ``envoy.type.v3.TokenBucketConfig``.
  config.core.v3.ConfigSource config_source = 2 [(validate.rules).message = {required: true}];
}
