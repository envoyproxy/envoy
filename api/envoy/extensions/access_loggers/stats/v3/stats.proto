syntax = "proto3";

package envoy.extensions.access_loggers.stats.v3;

import "envoy/config/core/v3/extension.proto";
import "envoy/type/matcher/v3/string.proto";

import "google/protobuf/wrappers.proto";

import "xds/annotations/v3/status.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.access_loggers.stats.v3";
option java_outer_classname = "StatsProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/access_loggers/stats/v3;statsv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Stats logger]
// [#extension: envoy.access_loggers.stats]

// [#next-free-field: 6]
message Config {
  option (xds.annotations.v3.message_status).work_in_progress = true;

  enum TimeUnit {
    Milliseconds = 0;
    Microseconds = 1;
    Nanoseconds = 2;
  }

  message TagFormatString {
    string format_string = 1;

    // Valid values for this tag. If empty, any value is allowed. Must match at least 1 matcher.
    repeated type.matcher.v3.StringMatcher allowed_values = 2;
  }

  message TagValue {
    // onoeof these
    string fixed_string = 1;

    TagFormatString format_string = 2;
  }

  message Tag {
    string name = 1;

    TagValue value = 2;
  }

  message Stat {
    string name = 1 [(validate.rules).string = {min_len: 1}];

    repeated Tag tags = 2;

    google.protobuf.UInt32Value max_cardinality = 3;
  }

  message Histogram {
    Stat stat = 1;

    TimeUnit unit = 2;

    string value = 3;
    // format string; must evaluate to a number
  }

  // Increase the counter by the amount of `value`.
  message Counter {
    Stat stat = 1;

    oneof value {
      // Must evaluate to a numeric value
      string value_format_string = 2;

      // For the computed set of tags, increment the counter by this fixed amount.
      uint32 value_fixed = 3;
    }
  }

  string stat_prefix = 1;

  google.protobuf.UInt32Value max_stats = 2;
  // Overall maximum number of stats from all types.

  repeated Histogram histograms = 3;

  repeated Counter counters = 4;

  // Specifies a collection of Formatter plugins that can be called from the access log configuration.
  // See the formatters extensions documentation for details.
  // [#extension-category: envoy.formatter]
  repeated config.core.v3.TypedExtensionConfig formatters = 5;
}
