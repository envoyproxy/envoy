syntax = "proto3";

package envoy.extensions.filters.listener.http_inspector.v3;

import "google/protobuf/wrappers.proto";
import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.listener.http_inspector.v3";
option java_outer_classname = "HttpInspectorProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/listener/http_inspector/v3;http_inspectorv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: HTTP Inspector Filter]
// Detect whether the application protocol is HTTP.
// [#extension: envoy.filters.listener.http_inspector]

message HttpInspector {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.config.filter.listener.http_inspector.v2.HttpInspector";

  // The number of bytes of the request the filter will initially buffer and
  // inspect to determine the http version, the filter will iteratively double
  // the buffer up to 64KiB. If not specified, the initial buffer is 8KiB.
  google.protobuf.UInt32Value initial_read_buffer_size = 1
      [(validate.rules).uint32 = {lt: 65537 gt: 16}];

}
