syntax = "proto3";

package envoy.extensions.filters.listener.tls_inspector.v3;

import "google/protobuf/wrappers.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.listener.tls_inspector.v3";
option java_outer_classname = "TlsInspectorProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/listener/tls_inspector/v3;tls_inspectorv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: TLS Inspector Filter]
// Allows detecting whether the transport appears to be TLS or plaintext.
// [#extension: envoy.filters.listener.tls_inspector]

message TlsInspector {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.config.filter.listener.tls_inspector.v2.TlsInspector";

  // Populate ``JA3`` fingerprint hash using data from the TLS Client Hello packet. Default is false.
  google.protobuf.BoolValue enable_ja3_fingerprinting = 1;

  // The size in bytes of the initial buffer requested by the tls_inspector.
  // If the filter needs to read additional bytes from the socket, the
  // filter will double the buffer up to it's default maximum of 64KiB.
  // If this size is not defined, defaults to maximum 64KiB that the
  // tls inspector will consume.
  google.protobuf.UInt32Value initial_read_buffer_size = 2
      [(validate.rules).uint32 = {lt: 65537 gt: 255}];
}
