syntax = "proto3";

package envoy.extensions.formatter.req_without_query.v3;

import "udpa/annotations/status.proto";

option java_package = "io.envoyproxy.envoy.extensions.formatter.req_without_query.v3";
option java_outer_classname = "ReqWithoutQueryProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/formatter/req_without_query/v3;req_without_queryv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Formatter extension for printing request without query string]
// [#extension: envoy.formatter.req_without_query]

// ReqWithoutQuery formatter extension implements REQ_WITHOUT_QUERY command operator that
// works the same way as :ref:`REQ <config_access_log_format_req>` except that it will
// remove the query string. It is used to avoid logging any sensitive information into
// the access log.
// See :ref:`here <config_access_log>` for more information on access log configuration.

// %REQ_WITHOUT_QUERY(X?Y):Z%
//   An HTTP request header where X is the main HTTP header, Y is the alternative one, and Z is an
//   optional parameter denoting string truncation up to Z characters long. The value is taken from
//   the HTTP request header named X first and if it's not set, then request header Y is used. If
//   none of the headers are present '-' symbol will be in the log.

// Configuration for the request without query formatter.
message ReqWithoutQuery {
}
