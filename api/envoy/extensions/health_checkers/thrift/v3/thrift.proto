syntax = "proto3";

package envoy.extensions.health_checkers.thrift.v3;

import "envoy/extensions/filters/network/thrift_proxy/v3/thrift_proxy.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.health_checkers.thrift.v3";
option java_outer_classname = "ThriftProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/health_checkers/thrift/v3;thriftv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Thrift]
// Thrift health checker :ref:`configuration overview <config_health_checkers_thrift>`.
// [#extension: envoy.health_checkers.thrift]

message Thrift {
  // Specifies the method name that will be set on each health check request dispatched to an upstream host.
  // Note that method name is case sensitive.
  string method_name = 1 [(validate.rules).string = {min_len: 1}];

  // Configures the transport type to be used with the health checks. Note that
  // :ref:`AUTO_TRANSPORT<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT>`
  // is not supported, and we don't honor :ref:`ThriftProtocolOptions<envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions>`
  // since it's possible to set to :ref:`AUTO_TRANSPORT<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT>`.
  // [#extension-category: envoy.filters.network]
  filters.network.thrift_proxy.v3.TransportType transport = 2
      [(validate.rules).enum = {defined_only: true}];

  // Configures the protocol type to be used with the health checks. Note that
  // :ref:`AUTO_PROTOCOL<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL>`
  // and :ref:`TWITTER<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER>`
  // are not supported, and we don't honor :ref:`ThriftProtocolOptions<envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions>`
  // since it's possible to set to :ref:`AUTO_PROTOCOL<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL>`
  // or :ref:`TWITTER<envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER>`.
  filters.network.thrift_proxy.v3.ProtocolType protocol = 3
      [(validate.rules).enum = {defined_only: true}];
}
