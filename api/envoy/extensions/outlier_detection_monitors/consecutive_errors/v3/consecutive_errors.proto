syntax = "proto3";

package envoy.extensions.outlier_detection_monitors.consecutive_errors.v3;

import "envoy/extensions/outlier_detection_monitors/common/v3/monitor_base.proto";

import "google/protobuf/wrappers.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.outlier_detection_monitors.consecutive_errors.v3";
option java_outer_classname = "ConsecutiveErrorsProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/outlier_detection_monitors/consecutive_errors/v3;consecutive_errorsv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Consecutive errors monitor]
// [#extension: envoy.outlier_detection_monitors.consecutive_errors]

// Monitor which counts consecutive errors.
// If number of consecutive errors exceeds the threshold, monitor will report that the host
// is unhealthy.
message ConsecutiveErrors {
  // Base monitor config. Defines which results should be interpreted as errors
  // and whether to enforce ejection when number of errors exceeds defined threshold.
  common.v3.MonitorBaseConfig errors = 1 [(validate.rules).message = {required: true}];

  // The number of consecutive errors before ejection occurs.
  // Defaults to 3.
  google.protobuf.UInt32Value threshold = 2 [(validate.rules).uint32 = {lte: 100}];
}
