syntax = "proto3";

package envoy.service.filter_chain.v3;

import "envoy/service/discovery/v3/discovery.proto";

import "google/api/annotations.proto";

import "envoy/annotations/resource.proto";
import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";

option java_package = "io.envoyproxy.envoy.service.filter_chain.v3";
option java_outer_classname = "FcdsProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/service/filter_chain/v3;filter_chainv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: FCDS]
// [#not-implemented-hide:]
// Filter Chain discovery :ref:`configuration overview <config_listeners>`

service FilterChainDiscoveryService {
  option (envoy.annotations.resource).type = "envoy.config.listener.v3.FilterChain";

  // The resource_names field in DiscoveryRequest specifies a list of filter chains to subscribe to updates
  // for. The name is either configured by the client or derived from the containing listener's name.
  rpc DeltaFilterChains(stream discovery.v3.DeltaDiscoveryRequest)
      returns (stream discovery.v3.DeltaDiscoveryResponse) {
  }

  rpc StreamFilterChains(stream discovery.v3.DiscoveryRequest)
      returns (stream discovery.v3.DiscoveryResponse) {
  }

  rpc FetchFilterChains(discovery.v3.DiscoveryRequest) returns (discovery.v3.DiscoveryResponse) {
    option (google.api.http).post = "/v3/discovery:filter_chains";
    option (google.api.http).body = "*";
  }
}

// [#not-implemented-hide:] Not configuration. Workaround c++ protobuf issue with importing
// services: https://github.com/google/protobuf/issues/4221 and protoxform to upgrade the file.
message FcdsDummy {
}
